@model PROMPERU.AULAVIRTUAL.WEB.ViewModel.Course.ListCursoOnlineMaestroAlumnoViewModel
@{
    ViewBag.Title = "Mis Cursos Maestro";
    ViewBag.Icon = "book";
    ViewBag.Seccion = "MisCursosMacro";
}
@section Breadcrumbs{}
@section Jumbotron{
    <div class="container-fluid container-lg sm-p-l-20 sm-p-r-20 full-height">
        <h3 class="usuarios m-b-20">&nbsp;@ViewBag.Title </h3>
        <div class="inner full-height" style="transform: translateY(0px); opacity: 1;">
            <form class="form row" method="get" action="@Url.Action("ListCursoOnlineMaestroAlumno","Course",new { p = 1 })">
                <div class="col-md-5 m-b-30">
                    <div class="form-group form-group-default input-group transparent center-margin rectangle-31">
                        @Html.TextBoxFor(x => x.NombreCurso, new { @class = "form-control input-group-addon text-left", @placeholder = "Buscar Curso", @autocomplete = "off" })
                        <span class="input-group-addon"><i class="pg-search"></i></span>
                    </div>
                </div>
                <div class="col-md-5 m-b-30">
                    <div class="form-group form-group-default input-group transparent center-margin rectangle-31" style="width: 100% !important;">
                        @Html.Label("Categoria del curso", new { @class = "buscar-usuario" })
                        @Html.DropDownListFor(x => x.CategoriaCursoId, new SelectList(Model.LstCategoriaCursoOnline, "CategoriaCursoOnlineId", "Nombre"), "[ - Seleccione - ]", new { @class = "form-control buscar-usuario" })
                    </div>
                </div>
                <div class="col-md-2 m-b-30">
                    <button type="submit" class="btn btn-filtrar-usuario  btn-lg m-t-5 filtrar">&nbsp;FILTRAR</button>
                </div>
            </form>
        </div>
    </div>
}

@section Styles{
    <style>

        .btn-curso {
            transition: visibility 1.5s ease-in;
        }

        .ar-1-1:hover .btn-curso {
            visibility: visible !important;
            transition: visibility 1.5s ease-in;
        }
    </style>

    <style>


        .card-back .card-body .card-back-body-container {
            background-color: #ffffff;
            border: 3px solid #e63527;
            display: -ms-flexbox;
            display: -webkit-flex;
            display: flex;
            -webkit-flex-direction: column;
            -ms-flex-direction: column;
            flex-direction: column;
            -webkit-flex-wrap: nowrap;
            -ms-flex-wrap: nowrap;
            flex-wrap: nowrap;
            -webkit-justify-content: flex-start;
            -ms-flex-pack: start;
            justify-content: flex-start;
            -webkit-align-content: stretch;
            -ms-flex-line-pack: stretch;
            align-content: stretch;
            -webkit-align-items: flex-start;
            -ms-flex-align: start;
            align-items: flex-start;
            height: 100%;
            padding: 20px;
            border-radius: 10px;
        }

        .card-back .card-body .title {
            -webkit-order: 0;
            -ms-flex-order: 0;
            order: 0;
            -webkit-flex: 0 1 auto;
            -ms-flex: 0 1 auto;
            flex: 0 1 auto;
            -webkit-align-self: auto;
            -ms-flex-item-align: auto;
            align-self: center;
            height: auto;
            overflow-x: initial;
            background-color: inherit;
            color: #e63527;
        }

        .card-back .card-body .description {
            -webkit-order: 0;
            -ms-flex-order: 0;
            order: 0;
            -webkit-flex: 1 1 auto;
            -ms-flex: 1 1 auto;
            flex: 1 1 auto;
            -webkit-align-self: auto;
            -ms-flex-item-align: auto;
            align-self: center;
            overflow-x: hidden;
        }

        .card-back .card-body .form-group {
            text-align: center;
            -webkit-order: 0;
            -ms-flex-order: 0;
            order: 0;
            -webkit-flex: 0 1 auto;
            -ms-flex: 0 1 auto;
            flex: 0 1 auto;
            -webkit-align-self: auto;
            -ms-flex-item-align: auto;
            align-self: center;
            margin-bottom: 0;
        }

        .card-flip > div {
            display: flex;
            display: block;
        }

        .card-front-body-container {
            border-radius: 10px;
            background-color: #e63527;
            padding: 15px;
        }


            .card-front-body-container .service-heading {
                margin: 15px 0 0 0;
                color: white;
            }

        .card-img-top .badges {
            top: 32px;
        }

        .btn.btn-promperu-red {
            border: 3px solid #E63528;
            border-radius: 5px;
            width: 171px;
            height: 41px;
            color: #E63528 !important;
            padding-top: 8px !important;
            font-size: 16px !important;
            letter-spacing: 1px !important;
            line-height: 19px !important;
            text-align: center !important;
        }

            .btn.btn-promperu-red:hover {
                border: 3px solid #E63528;
                border-radius: 5px;
                width: 171px;
                height: 41px;
                color: #FFFFFF !important;
                background-color: #E63528;
                padding-top: 8px !important;
                font-size: 16px !important;
                letter-spacing: 1px !important;
                line-height: 19px !important;
                text-align: center !important;
            }

        .card-back .card-body {
            width: 100%;
        }
    </style>


    <style>
        .loading {
            position: fixed;
            left: 0px;
            top: 0px;
            width: 100%;
            height: 100%;
            z-index: 99999;
            background: url('../../Content/assets/img/loading.gif') 50% 50% no-repeat rgb(249,249,249);
            overflow: hidden;
            /*opacity: .8;*/
        }

            .loading:after {
                content: "Cargando Cursos";
                display: block;
                position: absolute;
                top: 50%;
                left: 50%;
                padding-top: 70px;
                font-size: 25px;
                color: #DC3545;
                transform: translate(-50%, -50%);
            }

            html, body {
                overflow-y: hidden;
                /*height: 100%;*/
            }

    </style>


}
<div class="loading" id="id_lista"></div>
<div class="container-fluid container-fixed-lg">
    <div class="panel panel-transparent">
        @*<div class="panel-heading">
                <div class="panel-title">
                    <h4 class="m-t-0 m-b-10 usuarios">@ViewBag.Title</h4>
                </div>
                <div class="clearfix"></div>
            </div>*@
        <div class="panel-body">
            @{ var numCurso = 0;
                var background = "background-color: ";}
            @if (Model.LstCursoOnline.Count > 0)
            {
                foreach (var curso in Model.LstCursoOnline)
                {
                    var categoria = Model.LstCategoriaCursoOnline.FirstOrDefault(x => x.CategoriaCursoOnlineId == curso.CategoriaCursoOnlineId);
                    //var matricula = Model.LstMatriculaCursoOnline.Where(x => x.CursoOnlineId == curso.CursoOnlineId).FirstOrDefault();
                    //Int32? matriculaId = null;
                    var fechaActual = DateTime.Now;
                    /*if (matricula != null)
                    {
                        matriculaId = matricula.MatriculaCursoOnlineId;
                    }*/
                    //var cursoOnlineId = curso.MatriculaCursoOnline.Where(x => (fechaActual - x.FechaMatricula).TotalDays <= 60).Select(y => y.CursoOnlineId);
                    //var cursoOnlineId = curso..Where(x => (fechaActual - x.FechaMatricula).TotalDays <= 60).Select(y => y.CursoOnlineId);
                    if (numCurso % 4 == 0)
                    {
                        if (numCurso != 0)
                        {
                            @Html.Raw("</div></div>")
                        }
                        <text><div class="col-md-12 col-xlg-12">
                                <div class="row m-b-10">
                        </text>
                    }
                    var backgroundColor = background + categoria.Color + ";";
                //    if (cursoOnlineId.Contains(curso.CursoOnlineId))
                 //   {

                        <div class="col-md-6 col-lg-4 col-xs-12">
                            <div class="card card-flip h-100 w-100 hidden-xs" style="width:100%">
                                <div class="card-front">
                                    <div class="card-body">
                                        <div class="card-front-body-container">
                                            <a onclick="handleClick(this)" data-url="@Url.Action("ListCursoOnlineDetalleAlumno", "Course", new { CursoOnlineId = curso.CursoOnlineMaestroId })">
                                               @* @if (matricula != null)
                                                {
                                                    matriculaId = matricula.MatriculaCursoOnlineId;
                                                    <span class="label @(matricula.Estado == ConstantHelpers.ESTADO_MATRICULA.APROBADO ? "label-success" : matricula.Estado == ConstantHelpers.ESTADO_MATRICULA.COMPLETADO ? "label-info" : "label-warning")" style="position: absolute;top: 30px;left: 30px;"><i class="fa fa-check-circle"></i> <strong>@matricula.PorcentajeAvance %</strong> </span>
                                                }
                                                else if (Model.LstCursoOnlineDisponibe.Contains(curso.CursoOnlineId))
                                                {
                                                    <span class="label label-inverse" style="position: absolute;top: 30px;left: 30px;"><i class="fa fa-circle"></i> Disponible</span>
                                                }*@
                                                <img style="border-radius: 5px;width: 100%;" class="img-curso" src="@(Url.Content(ConstantHelpers.DEFAULT_SERVER_PATH + curso.RutaImagen))" />
                                            </a>
                                            <a onclick="handleClick(this)" data-url="@Url.Action("ListCursoOnlineDetalleAlumno", "Course", new { CursoOnlineId = curso.CursoOnlineMaestroId })">
                                                <h4 class="service-heading text-center" style="padding-top: 4px;">
                                                    @curso.Nombre
                                                    @if (curso.FechaCreacion >= DateTime.Now.AddDays(-15))
                                                    {
                                                        <img src="@Url.GetCmsResourceUrl("img/new-course.png")" alt="" style="width: 40px" />
                                                    }
                                                </h4>
                                            </a>
                                            @*<div class="card-img-top-2 card-img-top">
                                                    <div class="badges badges-right">
                                                        <a class="badge badge-warning" href="#"> Valoración: {{curso.Ranking}} <i class="fa fa-star"></i></a>
                                                    </div>
                                                </div>*@
                                        </div>
                                    </div>
                                </div>
                                <div class="card-back" style="display: flex;">
                                    <div class="card-body">
                                        <div class="card-back-body-container">
                                            <h4 class="title" style="margin-top: 3rem;margin-bottom: 2rem;">@curso.Nombre</h4>
                                            <div class="description">@curso.Descripcion</div>
                                            <div class="form-group">
                                                <a class="btn btn-promperu-red service-heading" href="@Url.Action("ListCursoOnlineDetalleAlumno", "Course", new { CursoOnlineId = curso.CursoOnlineMaestroId })" role="button">Ingresar</a>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>


                            <!--version mobile-->

                            <div class="card h-100 w-100 visible-xs" style="width:100%">
                                <div class="card-front">
                                    <div class="card-body">
                                        <div class="card-front-body-container">
                                            <a onclick="handleClick(this)" data-url="@Url.Action("ListCursoOnlineDetalleAlumno", "Course", new { CursoOnlineId = curso.CursoOnlineMaestroId })">
                                               @* @if (matricula != null)
                                                {
                                                    matriculaId = matricula.MatriculaCursoOnlineId;
                                                    <span class="label @(matricula.Estado == ConstantHelpers.ESTADO_MATRICULA.APROBADO ? "label-success" : matricula.Estado == ConstantHelpers.ESTADO_MATRICULA.COMPLETADO ? "label-info" : "label-warning")" style="position: absolute;top: 30px;left: 30px;"><i class="fa fa-check-circle"></i> <strong>@matricula.PorcentajeAvance %</strong> </span>
                                                }
                                                else if (Model.LstCursoOnlineDisponibe.Contains(curso.CursoOnlineId))
                                                {
                                                    <span class="label label-inverse" style="position: absolute;top: 30px;left: 30px;"><i class="fa fa-circle"></i> Disponible</span>
                                                }*@
                                                <img style="border-radius: 5px;width: 100%;" class="img-curso" src="@(Url.Content(ConstantHelpers.DEFAULT_SERVER_PATH + curso.RutaImagen))" />
                                            </a>
                                            <a onclick="handleClick(this)" data-url="@Url.Action("ListCursoOnlineDetalleAlumno", "Course", new { CursoOnlineId = curso.CursoOnlineMaestroId })">
                                                <h4 class="service-heading text-center" style="padding-top: 4px;">
                                                    @curso.Nombre
                                                    @if (curso.FechaCreacion >= DateTime.Now.AddDays(-15))
                                                    {
                                                        <img src="@Url.GetCmsResourceUrl("img/new-course.png")" alt="" style="width: 40px" />
                                                    }
                                                </h4>
                                            </a>
                                            
                                            <div class="description" style="color:#fff">@curso.Descripcion</div>
                                            <div class="form-group text-center">
                                                <a class="btn btn-promperu-White service-heading" style="border:3px solid #ffffff !important" href="@Url.Action("ListCursoOnlineDetalleAlumno", "Course", new { CursoOnlineId = curso.CursoOnlineMaestroId })" role="button">Ingresar</a>
                                            </div>

                                        </div>
                                    </div>
                                </div>
                                
                            </div>


                        </div>



                        numCurso++;
                    //}

                }
            }
            else
            {
                <div class="alert alert-info">
                    <i class="fa fa-exclamation-triangle"></i>&nbsp;Aún no se ha matriculado en ningún curso.
                </div>
            }
        </div>
    </div>
</div>
@Html.PagedListPager(Model.LstCursoOnline, page => Url.Action("ListCursoOnlineAlumno", new { p = page, NombreCurso = Model.NombreCurso, CategoriaCursoId = Model.CategoriaCursoId }), ConstantHelpers.Bootstrap3Pager)
</div>
</div>
@section Scripts{
    <!--<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery.matchHeight/0.7.2/jquery.matchHeight-min.js" integrity="sha256-+oeQRyZyY2StGafEsvKyDuEGNzJWAbWqiO2L/ctxF6c=" crossorigin="anonymous"></script>-->

    <script src="~/Content/assets/js/jquery.matchHeight-min.js"></script>
    <script>

        $(document).ready(function () {

            $(".loading").fadeOut("slow");
            $(' html, body').css({ overflow: 'auto' });

            resize_card();
        });

        $(window).resize(function () {
            resize_card();
        });

        function resize_card() {

            $('.card').matchHeight('remove');
            $('.card-front').matchHeight('remove');
            $('.card-front .service-heading').matchHeight('remove');
            $('.card-front .img-curso').matchHeight('remove');

            $('.card').matchHeight({ byRow: true });
            $('.card-front').matchHeight({ byRow: true });
            $('.card-front .service-heading').matchHeight({ byRow: true });
            $('.card-front .img-curso').matchHeight({ byRow: true });

        }

        function handleClick(e) {

            var $this = $(e);
            window.location = $this.data('url');
        }

    </script>
}