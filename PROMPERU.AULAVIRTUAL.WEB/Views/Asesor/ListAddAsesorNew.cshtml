@model PROMPERU.AULAVIRTUAL.WEB.ViewModel.Asesor.ListAddAsesorViewModel
@{
    ViewBag.Title = "ListAddAsesorNew";
    Layout = "~/Views/Shared/_LayoutDashbord.cshtml";
    ViewBag.Seccion = "Asesores";
}
@section Breadcrumbs{
    <div class="row mb-2">
        <div class="col-sm-12">
            <ol class="breadcrumb float-sm-left">
                <li class="breadcrumb-item"><a href="#">Inicio</a></li>
                <li class="breadcrumb-item active">Asesores</li>
            </ol>
        </div>
        <div class="col-sm-6">
            <h2 class="m-0">Asesores</h2>
        </div>
    </div><!-- /.row -->
}
<div class="row">
    <div class="col-lg-12 box-grey-content">
        <div class="content-form-grey">
            <form action="@Url.Action("SaveAsesor")" id="searchUser" method="post">

                <input name="UsuarioAsesor.TipoRegistro" type="hidden" value="1"><span class="checkmark"></span>
                @Html.HiddenFor(x => x.UsuarioAsesor.Nacionalidad)
                @Html.HiddenFor(x => x.UsuarioAsesor.Conversion)
               

                <div class="row">
                    <div class="col-sm-6">
                        <div class="form-group">
                            <label for="">Documento</label>
                            <select name="cbodocumento_val" id="cbodocumento_val" class="grupo form-control form-control-select form-select">
                                <option value="DNI">DNI</option>
                                <option value="OTROS">OTROS</option>
                            </select>
                        </div>
                    </div>

                    <div class="col-sm-6">
                        <div class="form-group">
                            <label for="">Documento de identidad</label>
                            @*<input type="text" class="form-control" id="DNI" name="DNI" placeholder="Documento de identidad">*@
                            @Html.TextBoxFor(x => Model.UsuarioAsesor.DNI, new { @class = "form-control", @placeholder = "Documento de identidad" })
                            @Html.ValidationMessageFor(x => Model.UsuarioAsesor.DNI)
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group">
                            <label for="">Nombres</label>
                            @Html.TextBoxFor(x => Model.UsuarioAsesor.Nombres, new { @class = "form-control", @placeholder = "Nombres" })
                            @Html.ValidationMessageFor(x => Model.UsuarioAsesor.Nombres)
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group">
                            <label for="">Apellidos</label>
                            @Html.TextBoxFor(x => Model.UsuarioAsesor.Apellidos, new { @class = "form-control ", @placeholder = "Apellidos" })
                            @Html.ValidationMessageFor(x => Model.UsuarioAsesor.Apellidos)
                        </div>
                    </div>


                    <div class="col-sm-6">
                        <div class="form-group">
                            <label for="">Email</label>

                            @Html.TextBoxFor(x => Model.UsuarioAsesor.Email, new { @class = "form-control", @placeholder = "Ingresa el correo electrónico" })
                            @Html.ValidationMessageFor(x => Model.UsuarioAsesor.Email)

                        </div>
                    </div>

                    <div class="col-sm-6">
                        <div class="form-group">
                            <label for="">Confirmar Correo</label>
                            @Html.TextBoxFor(x => Model.UsuarioAsesor.ConfirmarEmail, new { @class = "form-control", @placeholder = "Confirma el correo electrónico" })
                            @Html.ValidationMessageFor(x => Model.UsuarioAsesor.ConfirmarEmail)
                        </div>
                    </div>


                    <div class="col-sm-6">
                        <div class="form-group">
                            <label for="">Password</label>

                            @Html.PasswordFor(x => Model.UsuarioAsesor.Password, new { @class = "form-control", @placeholder = "Ingresa el Password" })
                            @Html.ValidationMessageFor(x => Model.UsuarioAsesor.Password)
                        </div>
                    </div>

                    <div class="col-sm-6">
                        <div class="form-group">
                            <label for="">Telefono</label>

                            @Html.TextBoxFor(x => Model.UsuarioAsesor.Telefono, new { @class = "form-control", @placeholder = "Ingresa el número telefónico" })
                            @Html.ValidationMessageFor(x => Model.UsuarioAsesor.Telefono)
                        </div>
                    </div>

                    <div class="col-sm-6">
                        <div class="form-group">
                            <label for="">Cargo</label>
                            @Html.TextBoxFor(x => Model.UsuarioAsesor.Cargo, new { @class = "form-control", @placeholder = "Ingresa el cargo" })
                            @Html.ValidationMessageFor(x => Model.UsuarioAsesor.Cargo)
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group">
                            <label for="">Nacionalidad</label>
                            @Html.DropDownListFor(x => Model.UsuarioAsesor.NacionalidadId2, new SelectList(Model.UsuarioAsesor.Nacionalidades, "ParametroId", "Descripcion"), "[- Seleccionar -]", new { @id = "cbonacionalidad", @class = "form-control" })
                            @Html.ValidationMessageFor(x => Model.UsuarioAsesor.NacionalidadId2)
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group">
                            <label for="">Sector Interes</label>
                            @Html.DropDownListFor(x => Model.UsuarioAsesor.Sector, new SelectList(Model.UsuarioAsesor.LstSector, "SectorId", "Descripcion"), "[- Seleccionar -]", new { @id = "cbosector", @class = "form-control" })
                            @Html.ValidationMessageFor(x => Model.UsuarioAsesor.Sector)
                        </div>
                    </div>


                </div>
                <div class="row">
                    <div class="col-sm-6 form-btn">
                        <input type="submit" class="btn btn-primary" value="Registrar">
                        @*<button type="submit" id="btnregistro" class="btn button-Registro_New">Registrar</button>*@
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>


<div class="row mis-solicitudes table-content">
    <div class="col-sm-12 table-responsive altomin">
        <table cellpadding="0" cellspacing="0" border="0" width="100%" class="table-list asesorias">
            <thead>
                <tr>


                    <th class="col-sm-4 title-table">Nombres</th>
                    <th class="col-sm-4 title-table">Código</th>
                    <th class="col-sm-4 title-table">Cargo</th>
                    <th class="text-center title-table">Estado</th>
                    <th class="text-center title-table" style="min-width: 9.3em">Opciones</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var usuario in Model.UsuariosAsesores)
                {
                    <tr>
                        <td>@usuario.Apellido, @usuario.Nombre</td>
                        <td>@usuario.Codigo</td>
                        <td>@usuario.Cargo</td>
                        <td>
                            <span class="label-estado @(usuario.Estado == ConstantHelpers.ESTADO.ACTIVO ? "completado" : usuario.Estado  == ConstantHelpers.ESTADO.PENDIENTE ? "pendiente" : "inactivo"  )">@(usuario.Estado == ConstantHelpers.ESTADO.ACTIVO ? "Activo" : usuario.Estado == ConstantHelpers.ESTADO.PENDIENTE ? "Pendiente" : "Inactivo")</span>
                        </td>
                        <td>
                            <div class="dropdown">
                                <a class="btn btn-secondary dropdown-toggle" href="#" role="button" id="dropdownMenuLink" data-bs-toggle="dropdown" aria-expanded="false">
                                    Acciones
                                </a>
                                <ul class="dropdown-menu" aria-labelledby="dropdownMenuLink">
                                    <li><a class="dropdown-item" href="@Url.Action("EditAsesor", "Asesor", new { id = usuario.UsuarioId })">Editar</a></li>
                                    <li>
                                        <a class="dropdown-item" href="@Url.Action("ChangeStateAsesor", "Asesor", new { id = usuario.UsuarioId })">
                                            @if (usuario.Estado.Equals(ConstantHelpers.ESTADO.INACTIVO))
                                            {
                                                <text>Activar a Usuario</text> }
                                            else
                                            {
                                                <text>Desactivar Usuario</text>}
                                        </a>
                                    </li>

                                </ul>
                            </div>
                        </td>
                    </tr>

                }


            </tbody>
        </table>
        @Html.PagedListPager(Model.LstUsuario, page => Url.Action("Index", "Asesor", new { p = page, CadenaBuscar = String.Empty, EmpresaId = Model.EmpresaId }), ConstantHelpers.Bootstrap3Pager)
    </div>
</div>