@model PROMPERU.AULAVIRTUAL.WEB.ViewModel.Report.ReportHistoricoAlumnosViewModel
@{
    ViewBag.Title = "Reporte histórico de Alumnos";
    ViewBag.Seccion = "Reportes";
    ViewBag.SubSeccion = "Alumnos";
    var parameters = new RouteValueDictionary(new
    {
        Codigo = Model.Codigo,
        RazonSocial = Model.RazonSocial,
        Curso = Model.Curso,
        Cargo = Model.Cargo,
        Grupo = Model.Grupo,
        Estado = Model.Estado,
        Type = string.Empty
    });
}

@*@section Breadcrumbs{
}*@

@section Jumbotron{
<div class="container-fluid container-lg sm-p-l-20 sm-p-r-20 full-height m-b-40">
    <h4 class="m-b-20 usuarios">@ViewBag.Title</h4>
    <div class="inner full-height" style="transform: translateY(0px); opacity: 1;">

        <form class="form" method="POST" action="@Url.Action("ReportHistoricoAlumnos", "Report")">

            <div class="col-md-4">
                <div class="form-group form-group-default input-group transparent center-margin rectangle-31">
                    @Html.LabelFor(x => x.Codigo, new { @class = "buscar-usuario" })
                    @Html.TextBoxFor(x => x.Codigo, new { @class = "form-control" })
                    <span class="input-group-addon"></span>
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group form-group-default input-group transparent center-margin rectangle-31">
                    @Html.LabelFor(x => x.Curso, new { @class = "buscar-usuario" })
                    @Html.TextBoxFor(x => x.Curso, new { @class = "form-control" })
                    <span class="input-group-addon"></span>
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group form-group-default input-group transparent center-margin rectangle-31">

                    @Html.LabelFor(x => x.Email, new { @class = "buscar-usuario" })
                    @Html.TextBoxFor(x => x.Email, new { @class = "form-control" })
                    <span class="input-group-addon"></span>

                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group form-group-default input-group transparent center-margin rectangle-31">
                    @Html.LabelFor(x => x.Grupo, new { @class = "buscar-usuario" })
                    @Html.TextBoxFor(x => x.Grupo, new { @class = "form-control" })
                    <span class="input-group-addon"></span>
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group form-group-default input-group transparent center-margin rectangle-31">
                    @Html.LabelFor(x => x.Estado, new { @class = "buscar-usuario" })
                    <select class="form-control buscar-usuario" name="Estado">
                        <option value="">[-Todos-]</option>
                        <option value="@ConstantHelpers.ESTADO_MATRICULA.PENDIENTE" @(Model.Estado == ConstantHelpers.ESTADO_MATRICULA.PENDIENTE ? "selected" : "")>@ConstantHelpers.TextoEstado(ConstantHelpers.ESTADO_MATRICULA.PENDIENTE)</option>
                        <option value="@ConstantHelpers.ESTADO_MATRICULA.COMPLETADO" @(Model.Estado == ConstantHelpers.ESTADO_MATRICULA.COMPLETADO ? "selected" : "")>@ConstantHelpers.TextoEstado(ConstantHelpers.ESTADO_MATRICULA.COMPLETADO)</option>
                        <option value="@ConstantHelpers.ESTADO_MATRICULA.APROBADO" @(Model.Estado == ConstantHelpers.ESTADO_MATRICULA.APROBADO ? "selected" : "")>@ConstantHelpers.TextoEstado(ConstantHelpers.ESTADO_MATRICULA.APROBADO)</option>
                        <option value="@ConstantHelpers.ESTADO_MATRICULA.PENDIENTE" @(Model.Estado == ConstantHelpers.ESTADO_MATRICULA.PENDIENTE ? "selected" : "")>@ConstantHelpers.TextoEstado(ConstantHelpers.ESTADO_MATRICULA.PENDIENTE)</option>
                        <option value="@ConstantHelpers.ESTADO_MATRICULA.DESAPROBADO" @(Model.Estado == ConstantHelpers.ESTADO_MATRICULA.DESAPROBADO ? "selected" : "")>@ConstantHelpers.TextoEstado(ConstantHelpers.ESTADO_MATRICULA.DESAPROBADO)</option>
                        <option value="@ConstantHelpers.ESTADO_MATRICULA.INACTIVO" @(Model.Estado == ConstantHelpers.ESTADO_MATRICULA.INACTIVO ? "selected" : "")>@ConstantHelpers.TextoEstado(ConstantHelpers.ESTADO_MATRICULA.INACTIVO)</option>
                    </select>
                    <span class="input-group-addon"><i style="color: #F52D56;" class="fa fa-chevron-down"></i></span>
                </div>
            </div>
            @if (Session.GetRol() == AppRol.Administrador)
            {
                <div class="col-md-4">
                    <div class="form-group form-group-default input-group transparent center-margin rectangle-31">
                        @Html.LabelFor(x => x.RazonSocial, new { @class = "buscar-usuario" })
                        @Html.TextBoxFor(x => x.RazonSocial, new { @class = "form-control" })
                        <span class="input-group-addon"></span>
                    </div>
                </div>
            }
                <div class="col-md-12 m-b-30 text-right">
                    <button type="submit" class="btn btn-filtrar-usuario  btn-lg m-t-5 filtrar">&nbsp;FILTRAR</button>
                    @*<a href="@Url.Action("DownloadReportHistoricoAlumnos", "Report", parameters)" class="btn btn-report-descargar text-btn-report-descargar m-t-5 p-t-10">DESCARGAR</a>*@
                    <div class="btn-group dropdown-default">
                        <button type="button" class="btn dropdown-toggle text-center base" data-toggle="dropdown" style="width: 170px !important;height: auto !important;"> DESCARGAR @*<i class='fa fa-chevron-down dropdown-toggle m-l-20' data-toggle="dropdown" style="cursor:pointer"></i>*@</button>
                        <ul class="dropdown-menu" role="menu" aria-labelledby="btnGroupOpciones">
                                <li>
                                    <a href="@Url.Action("DownloadReportHistoricoAlumnos", "Report", new { Codigo = Model.Codigo, RazonSocial = Model.RazonSocial, Curso = Model.Curso, Cargo = Model.Cargo, Grupo = Model.Grupo, Estado = Model.Estado , Type = "PDF" })"><i class="fa fa-users"></i>&nbsp;PDF</a>
                                </li>

                                <li>
                                    <a href="@Url.Action("DownloadReportHistoricoAlumnos", "Report", new {Codigo = Model.Codigo, RazonSocial = Model.RazonSocial, Curso = Model.Curso, Cargo = Model.Cargo, Grupo = Model.Grupo, Estado = Model.Estado , Type = "EXCEL" })"><i class="fa fa-users"></i>&nbsp;EXCEL</a>
                                </li>
                        </ul>
                    </div>
                </div>
        </form>

    </div>
</div>
}


<div class="container-fluid container-fixed-lg">
    <div class="panel panel-default">
        @*<div class="panel-heading">
            <div class="panel-title">
                <h4 class="m-t-0 m-b-0"><i class="fa fa-@ViewBag.Icon"></i>&nbsp;@ViewBag.Title</h4>
            </div>
            <div class="clearfix"></div>
        </div>*@
        <div class="panel-body">
            <div class="table-responsive">
                <div class="dataTables_wrapper form-inline no-footer" id="basicTable_wrapper">
                    <table role="grid" class="table table-hover dataTable no-footer">
                        <thead>
                            <tr>
                                @if (Session.GetRol() == AppRol.Administrador)
                                {
                                    <th class="title-table">RUC</th>
                                    <th class="title-table">Razón Social</th>
                                }
                                <th class="title-table">Nombre</th>
                                <th class="title-table">Cargo</th>
                                <th class="title-table">Correo Electrónico</th>
                                <th class="title-table">Curso</th>
                                <th class="text-center title-table">Fecha Matrícula</th>
                                <th class="text-center title-table">Fecha Completado</th>
                                <th class="text-center title-table">Fecha Aprobado</th>
                                <th class="text-center title-table">% Avance</th>
                                <th class="text-center title-table">Nota</th>
                                <th class="text-center title-table">Estado</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var registro in Model.LstViewReporteHistoricoAlumno)
                            {
                            <tr>
                                @if (Session.GetRol() == AppRol.Administrador)
                                {
                                    <td class="text-table">@registro.Empresa_RUC</td>
                                    <td class="text-table">@registro.Empresa_RazonSocial</td>
                                }
                                <td class="text-table"><a href="@Url.Action("ViewPerfil","User",new {UsuarioId=registro.Ususario_UsuarioId })">@registro.Usuario_NombreCompleto</a></td>
                                <td class="text-table">@registro.Usuario_Cargo</td>
                                <td class="text-table">@registro.Usuario_Email</td>
                                @if (Session.GetRolCompleto() == ConstantHelpers.ROL.ADMINISTRADOR)
                                {
                                    <td class="text-table"><a href="@Url.Action("ViewCursoOnlineAdmin", "Course",new {CursoOnlineId=registro.Curso_CursoOnlineId })">@registro.Curso_Nombre</a></td>
                                }
                                else
                                {
                                    <td class="text-table"><a href="@Url.Action("ViewCursoOnline", "Course",new {CursoOnlineId=registro.Curso_CursoOnlineId })" @*class="has-tooltip" data-placement="top" data-html="true" title="Cargo: @registro.Usuario_Cargo<br>Grupo: @registro.Matricula_Grupo"*@>@registro.Curso_Nombre</a></td>
                                }
                                <td class="text-center text-table">@registro.Matricula_FechaMatricula.ToLocalDateString()</td>
                                <td class="text-center text-table">@registro.Matricula_FechaCompletado.ToLocalDateString()</td>
                                <td class="text-center text-table">@registro.Matricula_FechaAprobado.ToLocalDateString()</td>
                                <td class="text-center text-table">@(registro.Matricula_PorcentajeAvance > 0 ? registro.Matricula_PorcentajeAvance.ToString() : "")</td>
                                <td class="text-center text-table">@registro.Matricula_Nota</td>
                                <td class="text-table">
                                    <span class="text-center label label-@(ConstantHelpers.TextoColorEstado(registro.Matricula_Estado))">
                                        @ConstantHelpers.TextoEstado(registro.Matricula_Estado)
                                    </span>
                                    @if (registro.Matricula_Estado == ConstantHelpers.ESTADO_MATRICULA.APROBADO)
                                    {
                                        <!--<a class="btn btn-link btn-xs" title="Descargar constancia" href="@Url.Action("DownloadCertificadoAlumno","Document",new { MatriculaCursoOnlineId = registro.Matricula_MatriculaCursoOnlineId, CursoOnlineId = registro.Curso_CursoOnlineId,UsuarioId=registro.Ususario_UsuarioId})">
                <i class="fa fa-download"></i>
            </a>-->
                                    }
                                </td>
                            </tr>
                            }
                        </tbody>
                    </table>
                    @Html.PagedListPager(Model.LstViewReporteHistoricoAlumno, page => Url.Action("ReportHistoricoAlumnos", new { np = page, Codigo = Model.Codigo, Curso = Model.Curso, RazonSocial = Model.RazonSocial, Grupo = Model.Grupo, Cargo = Model.Cargo, Estado = Model.Estado }), ConstantHelpers.Bootstrap3Pager)
                </div>
            </div>
        </div>
    </div>
</div>

